name: CI/CD Proyecto Riego √ìptimo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Aqu√≠ se compila el proyecto y genera los artefactos
  compilar:
    name: Compilar proyecto
    runs-on: ubuntu-latest

    steps:
      - name: Obtener c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Dar permisos al wrapper de Gradle
        run: chmod +x gradlew

      - name: Compilar el proyecto con Gradle (sin ejecutar pruebas)
        run: ./gradlew clean assemble --no-daemon --exclude-task test

      - name: Generar artefactos del build
        uses: actions/upload-artifact@v4
        with:
          name: artefactos-proyecto
          path: build/libs/*.jar

      - name: Confirmar compilaci√≥n
        run: echo "‚úÖ‚úÖ‚úÖ‚úÖVAMOOOOSSS Compilaci√≥n exitosa‚úÖ‚úÖ‚úÖ‚úÖ"

  #Como se pidi√≥, se ignoran las pruebas (solo verifica compilaci√≥n)
  ignorar-pruebas:
    name: Ignorar pruebas (verificaci√≥n r√°pida)
    runs-on: ubuntu-latest
    needs: compilar  # Solo se ejecuta si la compilaci√≥n fue exitosa

    steps:
      - name: Obtener c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verificar que el c√≥digo compile sin ejecutar pruebas
        run: ./gradlew compileTestsOnly --no-daemon

      - name: Confirmar acci√≥n
        run: echo "‚úÖüôèüèª‚öôÔ∏è Pruebas ignoradas correctamente. Verificaci√≥n de compilaci√≥n completada."
